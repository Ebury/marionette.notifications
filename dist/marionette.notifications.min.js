"use strict";var oldConstructor=Marionette.Application;Marionette.Application=Marionette.Application.extend({notificationTemplate:".js-notification-template",notificationViewEl:".js-notifications-view",notificationCloseSelector:".js-notification-close",notificationAutoremove:!0,notificationAutoremoveAfter:10,notificationAnimation:!0,get _notificationModel(){return Backbone.Model.extend({defaults:{type:null,message:null}})},get _notificationCollection(){return Backbone.Collection.extend({model:this._notificationModel})},get _notificationView(){return Marionette.ItemView.extend({template:this.notificationTemplate,ui:{closeButton:this.notificationCloseSelector},events:{"click @ui.closeButton":"close"},init:function(){var i=this;this.options.notificationAnimation&&(this.$el.hide(),this.$el.slideDown()),this.options.notificationAutoremove&&(this.to=setTimeout(function(){i.close()},1e3*this.options.notificationAutoremoveAfter))},close:function(i){clearTimeout(this.to),i&&i.stopPropagation();var t=this;this.options.notificationAnimation?this.$el.slideUp(function(){t.model.destroy()}):t.model.destroy()}})},get _notificationsView(){return Marionette.CollectionView.extend({childView:this._notificationView,onAddChild:function(i){i.init()},childViewOptions:function(){return{notificationAnimation:this.options.notificationAnimation,notificationAutoremove:this.options.notificationAnimation,notificationAutoremoveAfter:this.options.notificationAutoremoveAfter}}})},createNotificationsView:function(i){i=i||{};var t=_.extend({el:this.notificationViewEl,collection:new this._notificationCollection,notificationAnimation:this.notificationAnimation,notificationAutoremove:this.notificationAutoremove,notificationAutoremoveAfter:this.notificationAutoremoveAfter},i);return this.notificationsView=new this._notificationsView(t),this.notificationsView.render(),this.notificationsView},addNotification:function(i,t){this.notificationsView&&this.notificationsView.collection.unshift(new this._notificationModel({type:i,message:t}))},constructor:function(){oldConstructor.apply(this,arguments),this.createNotificationsView()}});
//# sourceMappingURL=marionette.notifications.min.js.map
